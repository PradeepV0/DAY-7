1 Get all the countries from the Asia continent /region using the Filter function
var request = new XMLHttpRequest();
request.open("GET","https://restcountries.com/v3.1/all",true)
request.send()
 request.onload=function(){
    var data = request.response
    var result = JSON.parse(data)
     var res = result.filter((ele)=>ele.continents=="Asia")
     //to display the filtered result countries
     
     console.log(res);
    }


0
: 
{name: {â€¦}, tld: Array(1), cca2: 'MV', ccn3: '462', cca3: 'MDV', â€¦}
1
: 
{name: {â€¦}, tld: Array(1), cca2: 'PK', ccn3: '586', cca3: 'PAK', â€¦}
2
: 
{name: {â€¦}, tld: Array(1), cca2: 'MY', ccn3: '458', cca3: 'MYS', â€¦}
3
: 
{name: {â€¦}, tld: Array(1), cca2: 'UZ', ccn3: '860', cca3: 'UZB', â€¦}
4
: 
{name: {â€¦}, tld: Array(1), cca2: 'CX', ccn3: '162', cca3: 'CXR', â€¦}
5
: 
{name: {â€¦}, tld: Array(3), cca2: 'SG', ccn3: '702', cca3: 'SGP', â€¦}
6
: 
{name: {â€¦}, tld: Array(2), cca2: 'QA', ccn3: '634', cca3: 'QAT', â€¦}
7
: 
{name: {â€¦}, tld: Array(2), cca2: 'KZ', ccn3: '398', cca3: 'KAZ', â€¦}
8
: 
{name: {â€¦}, tld: Array(1), cca2: 'IO', ccn3: '086', cca3: 'IOT', â€¦}
9
: 
{name: {â€¦}, tld: Array(1), cca2: 'BH', ccn3: '048', cca3: 'BHR', â€¦}
10
: 
{name: {â€¦}, tld: Array(1), cca2: 'IN', ccn3: '356', cca3: 'IND', â€¦}
11
: 
{name: {â€¦}, tld: Array(1), cca2: 'MO', ccn3: '446', cca3: 'MAC', â€¦}
12
: 
{name: {â€¦}, tld: Array(2), cca2: 'SY', ccn3: '760', cca3: 'SYR', â€¦}
13
: 
{name: {â€¦}, tld: Array(1), cca2: 'KG', ccn3: '417', cca3: 'KGZ', â€¦}
14
: 
{name: {â€¦}, tld: Array(2), cca2: 'PS', ccn3: '275', cca3: 'PSE', â€¦}
15
: 
{name: {â€¦}, tld: Array(3), cca2: 'TW', ccn3: '158', cca3: 'TWN', â€¦}
16
: 
{name: {â€¦}, tld: Array(2), cca2: 'KR', ccn3: '410', cca3: 'KOR', â€¦}
17
: 
{name: {â€¦}, tld: Array(1), cca2: 'IQ', ccn3: '368', cca3: 'IRQ', â€¦}
18
: 
{name: {â€¦}, tld: Array(1), cca2: 'KH', ccn3: '116', cca3: 'KHM', â€¦}
19
: 
{name: {â€¦}, tld: Array(1), cca2: 'CC', ccn3: '166', cca3: 'CCK', â€¦}
20
: 
{name: {â€¦}, tld: Array(3), cca2: 'LK', ccn3: '144', cca3: 'LKA', â€¦}
21
: 
{name: {â€¦}, tld: Array(1), cca2: 'IL', ccn3: '376', cca3: 'ISR', â€¦}
22
: 
{name: {â€¦}, tld: Array(1), cca2: 'TJ', ccn3: '762', cca3: 'TJK', â€¦}
23
: 
{name: {â€¦}, tld: Array(1), cca2: 'AZ', ccn3: '031', cca3: 'AZE', â€¦}
24
: 
{name: {â€¦}, tld: Array(1), cca2: 'GE', ccn3: '268', cca3: 'GEO', â€¦}
25
: 
{name: {â€¦}, tld: Array(5), cca2: 'CN', ccn3: '156', cca3: 'CHN', â€¦}
26
: 
{name: {â€¦}, tld: Array(2), cca2: 'TH', ccn3: '764', cca3: 'THA', â€¦}
27
: 
{name: {â€¦}, tld: Array(1), cca2: 'ID', ccn3: '360', cca3: 'IDN', â€¦}
28
: 
{name: {â€¦}, tld: Array(1), cca2: 'TM', ccn3: '795', cca3: 'TKM', â€¦}
29
: 
{name: {â€¦}, tld: Array(1), cca2: 'TR', ccn3: '792', cca3: 'TUR', â€¦}
30
: 
{name: {â€¦}, tld: Array(2), cca2: 'IR', ccn3: '364', cca3: 'IRN', â€¦}
31
: 
{name: {â€¦}, tld: Array(1), cca2: 'LB', ccn3: '422', cca3: 'LBN', â€¦}
32
: 
{name: {â€¦}, tld: Array(1), cca2: 'PH', ccn3: '608', cca3: 'PHL', â€¦}
33
: 
{name: {â€¦}, tld: Array(1), cca2: 'KW', ccn3: '414', cca3: 'KWT', â€¦}
34
: 
{name: {â€¦}, tld: Array(1), cca2: 'OM', ccn3: '512', cca3: 'OMN', â€¦}
35
: 
{name: {â€¦}, tld: Array(1), cca2: 'AF', ccn3: '004', cca3: 'AFG', â€¦}
36
: 
{name: {â€¦}, tld: Array(1), cca2: 'AM', ccn3: '051', cca3: 'ARM', â€¦}
37
: 
{name: {â€¦}, tld: Array(1), cca2: 'BD', ccn3: '050', cca3: 'BGD', â€¦}
38
: 
{name: {â€¦}, tld: Array(1), cca2: 'LA', ccn3: '418', cca3: 'LAO', â€¦}
39
: 
{name: {â€¦}, tld: Array(1), cca2: 'NP', ccn3: '524', cca3: 'NPL', â€¦}
40
: 
{name: {â€¦}, tld: Array(1), cca2: 'MM', ccn3: '104', cca3: 'MMR', â€¦}
41
: 
{name: {â€¦}, tld: Array(2), cca2: 'AE', ccn3: '784', cca3: 'ARE', â€¦}
42
: 
{name: {â€¦}, tld: Array(1), cca2: 'BT', ccn3: '064', cca3: 'BTN', â€¦}
43
: 
{name: {â€¦}, tld: Array(2), cca2: 'JO', ccn3: '400', cca3: 'JOR', â€¦}
44
: 
{name: {â€¦}, tld: Array(1), cca2: 'VN', ccn3: '704', cca3: 'VNM', â€¦}
45
: 
{name: {â€¦}, tld: Array(1), cca2: 'BN', ccn3: '096', cca3: 'BRN', â€¦}
46
: 
{name: {â€¦}, tld: Array(2), cca2: 'JP', ccn3: '392', cca3: 'JPN', â€¦}
47
: 
{name: {â€¦}, tld: Array(2), cca2: 'HK', ccn3: '344', cca3: 'HKG', â€¦}
48
: 
{name: {â€¦}, tld: Array(2), cca2: 'SA', ccn3: '682', cca3: 'SAU', â€¦}
49
: 
{name: {â€¦}, tld: Array(1), cca2: 'KP', ccn3: '408', cca3: 'PRK', â€¦}
50
: 
{name: {â€¦}, tld: Array(1), cca2: 'MN', ccn3: '496', cca3: 'MNG', â€¦}
51
: 
{name: {â€¦}, tld: Array(1), cca2: 'YE', ccn3: '887', cca3: 'YEM', â€¦}
length
: 
52
[[Prototype]]
: 
Array(0)

2 Get all the countries with a population of less than 2 lakhs using Filter function

var request = new XMLHttpRequest();
request.open("GET","https://restcountries.com/v3.1/all",true)
request.send()
 request.onload=function(){
    var data = request.response
    var result = JSON.parse(data)
     var res = result.filter((ele)=>ele.population<200000)
     //to display the filtered result countries
     var res1 = res.map((ele)=>`${ele.population}: ${ele.name.common}`)
     console.log(res1)
    }


    Output

    0
: 
"106766: Aruba"
1
: 
"11750: Wallis and Futuna"
2
: 
"29458: Ã…land Islands"
3
: 
"56: Pitcairn Islands"
4
: 
"98462: Seychelles"
5
: 
"400: French Southern and Antarctic Lands"
6
: 
"2072: Christmas Island"
7
: 
"38659: Saint Martin"
8
: 
"0: Heard Island and McDonald Islands"
9
: 
"1000: Antarctica"
10
: 
"56367: Greenland"
11
: 
"3000: British Indian Ocean Territory"
12
: 
"183629: Saint Lucia"
13
: 
"1470: Niue"
14
: 
"4255: Saint BarthÃ©lemy"
15
: 
"112519: Grenada"
16
: 
"85032: Isle of Man"
17
: 
"155014: CuraÃ§ao"
18
: 
"71991: Dominica"
19
: 
"48865: Faroe Islands"
20
: 
"4922: Montserrat"
21
: 
"18100: Cook Islands"
22
: 
"63903: Bermuda"
23
: 
"33938: San Marino"
24
: 
"65720: Cayman Islands"
25
: 
"544: Cocos (Keeling) Islands"
26
: 
"106290: United States Virgin Islands"
27
: 
"2302: Norfolk Island"
28
: 
"10834: Nauru"
29
: 
"0: Bouvet Island"
30
: 
"115021: Micronesia"
31
: 
"55197: American Samoa"
32
: 
"13452: Anguilla"
33
: 
"59194: Marshall Islands"
34
: 
"119446: Kiribati"
35
: 
"57557: Northern Mariana Islands"
36
: 
"168783: Guam"
37
: 
"33691: Gibraltar"
38
: 
"451: Vatican City"
39
: 
"100800: Jersey"
40
: 
"11792: Tuvalu"
41
: 
"53192: Saint Helena, Ascension and Tristan da Cunha"
42
: 
"198410: Samoa"
43
: 
"62999: Guernsey"
44
: 
"105697: Tonga"
45
: 
"53192: Saint Kitts and Nevis"
46
: 
"2563: Falkland Islands"
47
: 
"18092: Palau"
48
: 
"38718: Turks and Caicos Islands"
49
: 
"30237: British Virgin Islands"
50
: 
"38137: Liechtenstein"
51
: 
"77265: Andorra"
52
: 
"1411: Tokelau"
53
: 
"40812: Sint Maarten"
54
: 
"300: United States Minor Outlying Islands"
55
: 
"97928: Antigua and Barbuda"
56
: 
"6069: Saint Pierre and Miquelon"
57
: 
"110947: Saint Vincent and the Grenadines"
58
: 
"30: South Georgia"
59
: 
"25987: Caribbean Netherlands"
60
: 
"39244: Monaco"
61
: 
"2562: Svalbard and Jan Mayen"
length
: 
62
[[Prototype]]
: 
Array(0)
ï»¿



3  Print the following details name, capital, flag using forEach function

var request = new XMLHttpRequest();
request.open("GET","https://restcountries.com/v3.1/all",true)
request.send()
 request.onload=function(){
    var data = request.response
    var result = JSON.parse(data)
     var res1 = result.forEach((ele)=>{console.log(` ${ele.name.common}, ${ele.capital}, ${ele.flag}`)})
 
     
    }

    Output

     Mauritania, Nouakchott, ğŸ‡²ğŸ‡·
script.js:32  Aruba, Oranjestad, ğŸ‡¦ğŸ‡¼
script.js:32  Argentina, Buenos Aires, ğŸ‡¦ğŸ‡·
script.js:32  Sweden, Stockholm, ğŸ‡¸ğŸ‡ª
script.js:32  Maldives, MalÃ©, ğŸ‡²ğŸ‡»
script.js:32  Mexico, Mexico City, ğŸ‡²ğŸ‡½
script.js:32  New Zealand, Wellington, ğŸ‡³ğŸ‡¿
script.js:32  Ecuador, Quito, ğŸ‡ªğŸ‡¨
script.js:32  Wallis and Futuna, Mata-Utu, ğŸ‡¼ğŸ‡«
script.js:32  Ã…land Islands, Mariehamn, ğŸ‡¦ğŸ‡½
script.js:32  Montenegro, Podgorica, ğŸ‡²ğŸ‡ª
script.js:32  Pakistan, Islamabad, ğŸ‡µğŸ‡°
script.js:32  Pitcairn Islands, Adamstown, ğŸ‡µğŸ‡³
script.js:32  Zambia, Lusaka, ğŸ‡¿ğŸ‡²
script.js:32  Seychelles, Victoria, ğŸ‡¸ğŸ‡¨
script.js:32  Malaysia, Kuala Lumpur, ğŸ‡²ğŸ‡¾
script.js:32  Norway, Oslo, ğŸ‡³ğŸ‡´
script.js:32  Uzbekistan, Tashkent, ğŸ‡ºğŸ‡¿
script.js:32  Vanuatu, Port Vila, ğŸ‡»ğŸ‡º
script.js:32  French Southern and Antarctic Lands, Port-aux-FranÃ§ais, ğŸ‡¹ğŸ‡«
script.js:32  Christmas Island, Flying Fish Cove, ğŸ‡¨ğŸ‡½
script.js:32  Singapore, Singapore, ğŸ‡¸ğŸ‡¬
script.js:32  Suriname, Paramaribo, ğŸ‡¸ğŸ‡·
script.js:32  Western Sahara, El AaiÃºn, ğŸ‡ªğŸ‡­
script.js:32  Saint Martin, Marigot, ğŸ‡²ğŸ‡«
script.js:32  Costa Rica, San JosÃ©, ğŸ‡¨ğŸ‡·
script.js:32  Heard Island and McDonald Islands, undefined, ğŸ‡­ğŸ‡²
script.js:32  Ireland, Dublin, ğŸ‡®ğŸ‡ª
script.js:32  Antarctica, undefined, ğŸ‡¦ğŸ‡¶
script.js:32  Australia, Canberra, ğŸ‡¦ğŸ‡º
script.js:32  Libya, Tripoli, ğŸ‡±ğŸ‡¾
script.js:32  Qatar, Doha, ğŸ‡¶ğŸ‡¦
script.js:32  Greenland, Nuuk, ğŸ‡¬ğŸ‡±
script.js:32  Mauritius, Port Louis, ğŸ‡²ğŸ‡º
script.js:32  Kazakhstan, Nur-Sultan, ğŸ‡°ğŸ‡¿
script.js:32  British Indian Ocean Territory, Diego Garcia, ğŸ‡®ğŸ‡´
script.js:32  Albania, Tirana, ğŸ‡¦ğŸ‡±
script.js:32  Bahrain, Manama, ğŸ‡§ğŸ‡­
script.js:32  Papua New Guinea, Port Moresby, ğŸ‡µğŸ‡¬
script.js:32  Burundi, Gitega, ğŸ‡§ğŸ‡®
script.js:32  India, New Delhi, ğŸ‡®ğŸ‡³
script.js:32  Uruguay, Montevideo, ğŸ‡ºğŸ‡¾
script.js:32  Saint Lucia, Castries, ğŸ‡±ğŸ‡¨
script.js:32  Barbados, Bridgetown, ğŸ‡§ğŸ‡§
script.js:32  New Caledonia, NoumÃ©a, ğŸ‡³ğŸ‡¨
script.js:32  Latvia, Riga, ğŸ‡±ğŸ‡»
script.js:32  Estonia, Tallinn, ğŸ‡ªğŸ‡ª
script.js:32  Niue, Alofi, ğŸ‡³ğŸ‡º
script.js:32  Saint BarthÃ©lemy, Gustavia, ğŸ‡§ğŸ‡±
script.js:32  Puerto Rico, San Juan, ğŸ‡µğŸ‡·
script.js:32  Grenada, St. George's, ğŸ‡¬ğŸ‡©
script.js:32  Macau, undefined, ğŸ‡²ğŸ‡´
script.js:32  Cyprus, Nicosia, ğŸ‡¨ğŸ‡¾
script.js:32  Isle of Man, Douglas, ğŸ‡®ğŸ‡²
script.js:32  Greece, Athens, ğŸ‡¬ğŸ‡·
script.js:32  Syria, Damascus, ğŸ‡¸ğŸ‡¾
script.js:32  Lithuania, Vilnius, ğŸ‡±ğŸ‡¹
script.js:32  CuraÃ§ao, Willemstad, ğŸ‡¨ğŸ‡¼
script.js:32  Dominica, Roseau, ğŸ‡©ğŸ‡²
script.js:32  Niger, Niamey, ğŸ‡³ğŸ‡ª
script.js:32  Kyrgyzstan, Bishkek, ğŸ‡°ğŸ‡¬
script.js:32  Trinidad and Tobago, Port of Spain, ğŸ‡¹ğŸ‡¹
script.js:32  Togo, LomÃ©, ğŸ‡¹ğŸ‡¬
script.js:32  Palestine, Ramallah,Jerusalem, ğŸ‡µğŸ‡¸
script.js:32  Madagascar, Antananarivo, ğŸ‡²ğŸ‡¬
script.js:32  Croatia, Zagreb, ğŸ‡­ğŸ‡·
script.js:32  Faroe Islands, TÃ³rshavn, ğŸ‡«ğŸ‡´
script.js:32  Haiti, Port-au-Prince, ğŸ‡­ğŸ‡¹
script.js:32  Montserrat, Plymouth, ğŸ‡²ğŸ‡¸
script.js:32  Cook Islands, Avarua, ğŸ‡¨ğŸ‡°
script.js:32  Timor-Leste, Dili, ğŸ‡¹ğŸ‡±
script.js:32  Martinique, Fort-de-France, ğŸ‡²ğŸ‡¶
script.js:32  Cuba, Havana, ğŸ‡¨ğŸ‡º
script.js:32  Taiwan, Taipei, ğŸ‡¹ğŸ‡¼
script.js:32  Eswatini, Mbabane, ğŸ‡¸ğŸ‡¿
script.js:32  Ukraine, Kyiv, ğŸ‡ºğŸ‡¦
script.js:32  Bermuda, Hamilton, ğŸ‡§ğŸ‡²
script.js:32  South Korea, Seoul, ğŸ‡°ğŸ‡·
script.js:32  Peru, Lima, ğŸ‡µğŸ‡ª
script.js:32  Iraq, Baghdad, ğŸ‡®ğŸ‡¶
script.js:32  Moldova, ChiÈ™inÄƒu, ğŸ‡²ğŸ‡©
script.js:32  San Marino, City of San Marino, ğŸ‡¸ğŸ‡²
script.js:32  Venezuela, Caracas, ğŸ‡»ğŸ‡ª
script.js:32  Guyana, Georgetown, ğŸ‡¬ğŸ‡¾
script.js:32  Cayman Islands, George Town, ğŸ‡°ğŸ‡¾
script.js:32  Cambodia, Phnom Penh, ğŸ‡°ğŸ‡­
script.js:32  Cocos (Keeling) Islands, West Island, ğŸ‡¨ğŸ‡¨
script.js:32  Malta, Valletta, ğŸ‡²ğŸ‡¹
script.js:32  Sri Lanka, Sri Jayawardenepura Kotte, ğŸ‡±ğŸ‡°
script.js:32  Israel, Jerusalem, ğŸ‡®ğŸ‡±
script.js:32  Sudan, Khartoum, ğŸ‡¸ğŸ‡©
script.js:32  United States Virgin Islands, Charlotte Amalie, ğŸ‡»ğŸ‡®
script.js:32  Eritrea, Asmara, ğŸ‡ªğŸ‡·
script.js:32  Mali, Bamako, ğŸ‡²ğŸ‡±
script.js:32  Somalia, Mogadishu, ğŸ‡¸ğŸ‡´
script.js:32  Norfolk Island, Kingston, ğŸ‡³ğŸ‡«
script.js:32  Comoros, Moroni, ğŸ‡°ğŸ‡²
script.js:32  Nicaragua, Managua, ğŸ‡³ğŸ‡®
script.js:32  Russia, Moscow, ğŸ‡·ğŸ‡º
script.js:32  Uganda, Kampala, ğŸ‡ºğŸ‡¬
script.js:32  Nauru, Yaren, ğŸ‡³ğŸ‡·
script.js:32  Switzerland, Bern, ğŸ‡¨ğŸ‡­
script.js:32  Portugal, Lisbon, ğŸ‡µğŸ‡¹
script.js:32  Tajikistan, Dushanbe, ğŸ‡¹ğŸ‡¯
script.js:32  South Sudan, Juba, ğŸ‡¸ğŸ‡¸
script.js:32  Bouvet Island, undefined, ğŸ‡§ğŸ‡»
script.js:32  Micronesia, Palikir, ğŸ‡«ğŸ‡²
script.js:32  American Samoa, Pago Pago, ğŸ‡¦ğŸ‡¸
script.js:32  Czechia, Prague, ğŸ‡¨ğŸ‡¿
script.js:32  Botswana, Gaborone, ğŸ‡§ğŸ‡¼
script.js:32  Tunisia, Tunis, ğŸ‡¹ğŸ‡³
script.js:32  Anguilla, The Valley, ğŸ‡¦ğŸ‡®
script.js:32  Guinea-Bissau, Bissau, ğŸ‡¬ğŸ‡¼
script.js:32  Slovakia, Bratislava, ğŸ‡¸ğŸ‡°
script.js:32  Marshall Islands, Majuro, ğŸ‡²ğŸ‡­
script.js:32  Algeria, Algiers, ğŸ‡©ğŸ‡¿
script.js:32  Jamaica, Kingston, ğŸ‡¯ğŸ‡²
script.js:32  Mozambique, Maputo, ğŸ‡²ğŸ‡¿
script.js:32  Spain, Madrid, ğŸ‡ªğŸ‡¸
script.js:32  Honduras, Tegucigalpa, ğŸ‡­ğŸ‡³
script.js:32  Netherlands, Amsterdam, ğŸ‡³ğŸ‡±
script.js:32  South Africa, Pretoria,Bloemfontein,Cape Town, ğŸ‡¿ğŸ‡¦
script.js:32  Azerbaijan, Baku, ğŸ‡¦ğŸ‡¿
script.js:32  North Macedonia, Skopje, ğŸ‡²ğŸ‡°
script.js:32  Gambia, Banjul, ğŸ‡¬ğŸ‡²
script.js:32  Liberia, Monrovia, ğŸ‡±ğŸ‡·
script.js:32  Luxembourg, Luxembourg, ğŸ‡±ğŸ‡º
script.js:32  Cape Verde, Praia, ğŸ‡¨ğŸ‡»
script.js:32  Bahamas, Nassau, ğŸ‡§ğŸ‡¸
script.js:32  Georgia, Tbilisi, ğŸ‡¬ğŸ‡ª
script.js:32  Kiribati, South Tarawa, ğŸ‡°ğŸ‡®
script.js:32  Tanzania, Dodoma, ğŸ‡¹ğŸ‡¿
script.js:32  China, Beijing, ğŸ‡¨ğŸ‡³
script.js:32  Guatemala, Guatemala City, ğŸ‡¬ğŸ‡¹
script.js:32  SÃ£o TomÃ© and PrÃ­ncipe, SÃ£o TomÃ©, ğŸ‡¸ğŸ‡¹
script.js:32  Germany, Berlin, ğŸ‡©ğŸ‡ª
script.js:32  Sierra Leone, Freetown, ğŸ‡¸ğŸ‡±
script.js:32  Chad, N'Djamena, ğŸ‡¹ğŸ‡©
script.js:32  United Kingdom, London, ğŸ‡¬ğŸ‡§
script.js:32  Slovenia, Ljubljana, ğŸ‡¸ğŸ‡®
script.js:32  Thailand, Bangkok, ğŸ‡¹ğŸ‡­
script.js:32  Indonesia, Jakarta, ğŸ‡®ğŸ‡©
script.js:32  Northern Mariana Islands, Saipan, ğŸ‡²ğŸ‡µ
script.js:32  Guam, HagÃ¥tÃ±a, ğŸ‡¬ğŸ‡º
script.js:32  Finland, Helsinki, ğŸ‡«ğŸ‡®
script.js:32  Mayotte, Mamoudzou, ğŸ‡¾ğŸ‡¹
script.js:32  Gibraltar, Gibraltar, ğŸ‡¬ğŸ‡®
script.js:32  Turkmenistan, Ashgabat, ğŸ‡¹ğŸ‡²
script.js:32  Kosovo, Pristina, ğŸ‡½ğŸ‡°
script.js:32  Ivory Coast, Yamoussoukro, ğŸ‡¨ğŸ‡®
script.js:32  Morocco, Rabat, ğŸ‡²ğŸ‡¦
script.js:32  Dominican Republic, Santo Domingo, ğŸ‡©ğŸ‡´
script.js:32  Ghana, Accra, ğŸ‡¬ğŸ‡­
script.js:32  Vatican City, Vatican City, ğŸ‡»ğŸ‡¦
script.js:32  Jersey, Saint Helier, ğŸ‡¯ğŸ‡ª
script.js:32  Turkey, Ankara, ğŸ‡¹ğŸ‡·
script.js:32  Tuvalu, Funafuti, ğŸ‡¹ğŸ‡»
script.js:32  Iran, Tehran, ğŸ‡®ğŸ‡·
script.js:32  Egypt, Cairo, ğŸ‡ªğŸ‡¬
script.js:32  Denmark, Copenhagen, ğŸ‡©ğŸ‡°
script.js:32  Kenya, Nairobi, ğŸ‡°ğŸ‡ª
script.js:32  Bulgaria, Sofia, ğŸ‡§ğŸ‡¬
script.js:32  Zimbabwe, Harare, ğŸ‡¿ğŸ‡¼
script.js:32  Angola, Luanda, ğŸ‡¦ğŸ‡´
script.js:32  Nigeria, Abuja, ğŸ‡³ğŸ‡¬
script.js:32  Poland, Warsaw, ğŸ‡µğŸ‡±
script.js:32  Senegal, Dakar, ğŸ‡¸ğŸ‡³
script.js:32  Saint Helena, Ascension and Tristan da Cunha, Jamestown, ğŸ‡¸ğŸ‡­
script.js:32  Lebanon, Beirut, ğŸ‡±ğŸ‡§
script.js:32  Samoa, Apia, ğŸ‡¼ğŸ‡¸
script.js:32  Philippines, Manila, ğŸ‡µğŸ‡­
script.js:32  Guernsey, St. Peter Port, ğŸ‡¬ğŸ‡¬
script.js:32  El Salvador, San Salvador, ğŸ‡¸ğŸ‡»
script.js:32  Kuwait, Kuwait City, ğŸ‡°ğŸ‡¼
script.js:32  Tonga, Nuku'alofa, ğŸ‡¹ğŸ‡´
script.js:32  Oman, Muscat, ğŸ‡´ğŸ‡²
script.js:32  Afghanistan, Kabul, ğŸ‡¦ğŸ‡«
script.js:32  Saint Kitts and Nevis, Basseterre, ğŸ‡°ğŸ‡³
script.js:32  Central African Republic, Bangui, ğŸ‡¨ğŸ‡«
script.js:32  Serbia, Belgrade, ğŸ‡·ğŸ‡¸
script.js:32  Armenia, Yerevan, ğŸ‡¦ğŸ‡²
script.js:32  Bangladesh, Dhaka, ğŸ‡§ğŸ‡©
script.js:32  Laos, Vientiane, ğŸ‡±ğŸ‡¦
script.js:32  Chile, Santiago, ğŸ‡¨ğŸ‡±
script.js:32  French Polynesia, PapeetÄ“, ğŸ‡µğŸ‡«
script.js:32  Panama, Panama City, ğŸ‡µğŸ‡¦
script.js:32  United States, Washington, D.C., ğŸ‡ºğŸ‡¸
script.js:32  Nepal, Kathmandu, ğŸ‡³ğŸ‡µ
script.js:32  Myanmar, Naypyidaw, ğŸ‡²ğŸ‡²
script.js:32  Falkland Islands, Stanley, ğŸ‡«ğŸ‡°
script.js:32  Hungary, Budapest, ğŸ‡­ğŸ‡º
script.js:32  Palau, Ngerulmud, ğŸ‡µğŸ‡¼
script.js:32  Equatorial Guinea, Malabo, ğŸ‡¬ğŸ‡¶
script.js:32  Guinea, Conakry, ğŸ‡¬ğŸ‡³
script.js:32  United Arab Emirates, Abu Dhabi, ğŸ‡¦ğŸ‡ª
script.js:32  Turks and Caicos Islands, Cockburn Town, ğŸ‡¹ğŸ‡¨
script.js:32  British Virgin Islands, Road Town, ğŸ‡»ğŸ‡¬
script.js:32  Liechtenstein, Vaduz, ğŸ‡±ğŸ‡®
script.js:32  Bosnia and Herzegovina, Sarajevo, ğŸ‡§ğŸ‡¦
script.js:32  Malawi, Lilongwe, ğŸ‡²ğŸ‡¼
script.js:32  Bhutan, Thimphu, ğŸ‡§ğŸ‡¹
script.js:32  Cameroon, YaoundÃ©, ğŸ‡¨ğŸ‡²
script.js:32  Andorra, Andorra la Vella, ğŸ‡¦ğŸ‡©
script.js:32  Guadeloupe, Basse-Terre, ğŸ‡¬ğŸ‡µ
script.js:32  Republic of the Congo, Brazzaville, ğŸ‡¨ğŸ‡¬
script.js:32  RÃ©union, Saint-Denis, ğŸ‡·ğŸ‡ª
script.js:32  Burkina Faso, Ouagadougou, ğŸ‡§ğŸ‡«
script.js:32  Jordan, Amman, ğŸ‡¯ğŸ‡´
script.js:32  DR Congo, Kinshasa, ğŸ‡¨ğŸ‡©
script.js:32  Tokelau, Fakaofo, ğŸ‡¹ğŸ‡°
script.js:32  Vietnam, Hanoi, ğŸ‡»ğŸ‡³
script.js:32  Sint Maarten, Philipsburg, ğŸ‡¸ğŸ‡½
script.js:32  Belgium, Brussels, ğŸ‡§ğŸ‡ª
script.js:32  United States Minor Outlying Islands, Washington DC, ğŸ‡ºğŸ‡²
script.js:32  Brazil, BrasÃ­lia, ğŸ‡§ğŸ‡·
script.js:32  Belize, Belmopan, ğŸ‡§ğŸ‡¿
script.js:32  Antigua and Barbuda, Saint John's, ğŸ‡¦ğŸ‡¬
script.js:32  Paraguay, AsunciÃ³n, ğŸ‡µğŸ‡¾
script.js:32  Benin, Porto-Novo, ğŸ‡§ğŸ‡¯
script.js:32  Brunei, Bandar Seri Begawan, ğŸ‡§ğŸ‡³
script.js:32  Bolivia, Sucre, ğŸ‡§ğŸ‡´
script.js:32  Djibouti, Djibouti, ğŸ‡©ğŸ‡¯
script.js:32  French Guiana, Cayenne, ğŸ‡¬ğŸ‡«
script.js:32  Canada, Ottawa, ğŸ‡¨ğŸ‡¦
script.js:32  Saint Pierre and Miquelon, Saint-Pierre, ğŸ‡µğŸ‡²
script.js:32  Japan, Tokyo, ğŸ‡¯ğŸ‡µ
script.js:32  Rwanda, Kigali, ğŸ‡·ğŸ‡¼
script.js:32  Saint Vincent and the Grenadines, Kingstown, ğŸ‡»ğŸ‡¨
script.js:32  Iceland, Reykjavik, ğŸ‡®ğŸ‡¸
script.js:32  Belarus, Minsk, ğŸ‡§ğŸ‡¾
script.js:32  Hong Kong, City of Victoria, ğŸ‡­ğŸ‡°
script.js:32  Lesotho, Maseru, ğŸ‡±ğŸ‡¸
script.js:32  Fiji, Suva, ğŸ‡«ğŸ‡¯
script.js:32  Austria, Vienna, ğŸ‡¦ğŸ‡¹
script.js:32  Colombia, BogotÃ¡, ğŸ‡¨ğŸ‡´
script.js:32  Gabon, Libreville, ğŸ‡¬ğŸ‡¦
script.js:32  Saudi Arabia, Riyadh, ğŸ‡¸ğŸ‡¦
script.js:32  South Georgia, King Edward Point, ğŸ‡¬ğŸ‡¸
script.js:32  Ethiopia, Addis Ababa, ğŸ‡ªğŸ‡¹
script.js:32  Caribbean Netherlands, Kralendijk, ğŸ‡§ğŸ‡¶
script.js:32  Monaco, Monaco, ğŸ‡²ğŸ‡¨
script.js:32  North Korea, Pyongyang, ğŸ‡°ğŸ‡µ
script.js:32  Italy, Rome, ğŸ‡®ğŸ‡¹
script.js:32  Namibia, Windhoek, ğŸ‡³ğŸ‡¦
script.js:32  Mongolia, Ulan Bator, ğŸ‡²ğŸ‡³
script.js:32  Solomon Islands, Honiara, ğŸ‡¸ğŸ‡§
script.js:32  Yemen, Sana'a, ğŸ‡¾ğŸ‡ª
script.js:32  Romania, Bucharest, ğŸ‡·ğŸ‡´
script.js:32  Svalbard and Jan Mayen, Longyearbyen, ğŸ‡¸ğŸ‡¯
script.js:32  France, Paris, ğŸ‡«ğŸ‡·

4 Print the total population of countries using reduce function

var request = new XMLHttpRequest();
request.open("GET","https://restcountries.com/v3.1/all",true)
request.send()
 request.onload=function(){
    var data = request.response
    var result = JSON.parse(data)
    var res = result.reduce((acc,cv)=>acc+cv.population,0)
    console.log(res)
    }


    Output


    7777721563


    5   Print the country which uses US Dollars as currency.


    var request = new XMLHttpRequest();
request.open("GET","https://restcountries.com/v3.1/all",true)
request.send()
 request.onload=function(){
    var data = request.response
    var result = JSON.parse(data)
     var res = result.filter((ele)=>ele.currencies)
     var res1 = res.filter((ele)=>ele.currencies.USD)
     var res2 = res1.map((ele)=>`${ele.name.common}: ${ele.currencies.USD.name}`)

     
    
     console.log(res2);
    }

Output
0
: 
"Ecuador: United States dollar"
1
: 
"British Indian Ocean Territory: United States dollar"
2
: 
"Puerto Rico: United States dollar"
3
: 
"Timor-Leste: United States dollar"
4
: 
"Cambodia: United States dollar"
5
: 
"United States Virgin Islands: United States dollar"
6
: 
"Micronesia: United States dollar"
7
: 
"American Samoa: United States dollar"
8
: 
"Marshall Islands: United States dollar"
9
: 
"Bahamas: United States dollar"
10
: 
"Northern Mariana Islands: United States dollar"
11
: 
"Guam: United States dollar"
12
: 
"El Salvador: United States dollar"
13
: 
"Panama: United States dollar"
14
: 
"United States: United States dollar"
15
: 
"Palau: United States dollar"
16
: 
"Turks and Caicos Islands: United States dollar"
17
: 
"British Virgin Islands: United States dollar"
18
: 
"United States Minor Outlying Islands: United States dollar"
19
: 
"Caribbean Netherlands: United States dollar"
length
: 
20
[[Prototype]]
: 
Array(0)







